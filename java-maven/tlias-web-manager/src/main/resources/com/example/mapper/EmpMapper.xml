<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.doub1e.mapper.EmpMapper">
    <!--根据ID更新员工信息-->
    <update id="update">
        update emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>
    <!--批量删除员工(1,2,3)-->
    <delete id="deleteBatch">
        delete from emp where id in
        <foreach collection="ids" separator="," item="id" open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <!--条件查询-->
    <select id="list" resultType="com.example.entity.Emp">
        select e.*, d.name deptName
        from emp e
        left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null and gender != ''">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null ">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>
        order by update_time desc
    </select>

    <!--resultMap标签，进行一对多数据映射 autoMapping设置为true可以进行自动映射-->
    <resultMap id="empResultMap" type="com.example.entity.Emp" autoMapping="true">
        <!--id标签，主键映射-->
        <id column="id" property="id"></id>

        <!--collection标签用来封装集合数据，适用于一对多的情况-->
        <collection property="exprList" ofType="com.example.entity.EmpExpr">
            <result column="ee_id" property="id"></result>
            <result column="ee_empId" property="empId"></result>
            <result column="ee_begin" property="begin"></result>
            <result column="ee_end" property="end"></result>
            <result column="ee_company" property="company"></result>
            <result column="ee_job" property="job"></result>
        </collection>
    </resultMap>

    <!--根据id查询员工基本信息和员工经历信息-->
    <select id="getById" resultMap="empResultMap">
        select e.*,
               ee.id      ee_id,
               ee.emp_id  ee_empId,
               ee.begin   ee_begin,
               ee.end     ee_end,
               ee.company ee_company,
               ee.job     ee_job
        from emp e
                 left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id}
    </select>
</mapper>